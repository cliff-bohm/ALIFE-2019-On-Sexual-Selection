% BRAIN
  brainType = ANN                            #(string) brain to be used, [ANN]

% BRAIN_ANN
  biasRange = -1.0,1.0                       #(string) When each nodes value is calculated a bias in this range (derived from the genome) will be added to the node
                                             #  value before thresholding.  (min,max)
  genomeName = root::                        #(string) namespace for parameters used to define this brain
  hiddenLayerSizes =                         #(string) comma seperated list of sizes for each hidden layer if there are hidden layers
                                             #  if a single number, all hidden layers will have this size
                                             #  if blank, hidden layers will all have (number of outputs + number of recurrent) nodes.
  nrOfHiddenLayers = 2                       #(int) number of hidden layers. if 0, hidden layer have (number of outputs + number of recurrent) nodes.
  nrOfRecurringNodes = 10                    #(int) number of recurring nodes
  thresholdMethod = Tanh                     #(string) Threshold method applied to node values after summation. Must be one of: NONE, Sigmoid, Tanh, ReLU, Binary
  weightRange = -1.0,1.0                     #(string) range for weight values (min,max)

% GENOME
  alphabetSize = 256.0                       #(double) alphabet size for genome
  genomeType = Circular                      #(string) genome to be used, [Circular]
  sitesType = char                           #(string) type for sites in genome [char, int, double, bool]

% GENOME_CIRCULAR
  mutationCopyMaxSize = 16                   #(int) maximum size of insertion mutation
  mutationCopyMinSize = 4                    #(int) minimum size of insertion mutation
  mutationCopyRate = 0.0                     #(double) per site insertion rate
  mutationCrossCount = 19                    #(int) number of crosses when performing crossover (including during recombination)
  mutationCrossMethodPL = perfect            #(string) when crossover happens, are cross locaitons random or perfect?
                                             #  random: mutationCrossCount cut positions are genereated randomly for every event
                                             #  perfect: mutationCrossCount cut positions are genereated once and are perfect, i.e. if genome length is 300 and mutationCrossCount
                                             #  is 2 then crossover points will be at sites 100 and 200.
  mutationDeleteMaxSize = 12                 #(int) maximum size of insertion mutation
  mutationDeleteMinSize = 4                  #(int) minimum size of insertion mutation
  mutationDeleteRate = 0.0                   #(double) per site deletion rate
  mutationIndelCopyFirst = 1                 #(bool) whether copy or deletion happens first (0 = delete first, 1 = copy first)
  mutationIndelInsertMethod = 1              #(int) where is copied material inserted?
                                             #  0 = place random, 1 = replace deleted sites, 2 = insert just before copied material
  mutationIndelMaxSize = 12                  #(int) maximum size of insertion-deletion mutation
  mutationIndelMinSize = 4                   #(int) minimum size of insertion-deletion mutation
  mutationIndelRate = 0.0001                 #(double) per site insertion+deletion (indel) rate. This mutation copies a segment of the genome and deletes a segment
                                             #  of the same size so genome size remains fixed).
  mutationPointOffsetRange = 1.0             #(double) range of PointOffset mutation
  mutationPointOffsetRate = 0.0              #(double) per site point offset mutation rate (site changes in range (+/-)mutationPointOffsetRange)
  mutationPointRate = 0.001                  #(double) per site point mutation rate
  sizeInitial = 1000                         #(int) starting size for genome
  sizeMax = 1000                             #(int) if genome is larger then this, mutations will only decrease chromosome size
  sizeMin = 1000                             #(int) if genome is smaller then this, mutations will only increase chromosome size

